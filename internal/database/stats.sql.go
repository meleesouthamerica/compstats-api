// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: stats.sql

package database

import (
	"context"
)

const createStats = `-- name: CreateStats :one
INSERT INTO stats (
  player_id,
  half_id,
  kills,
  deaths,
  assists,
  score,
  winner
) VALUES (?, ?, ?, ?, ?, ?, ?) RETURNING id, player_id, half_id, kills, deaths, assists, score, winner, created_at, updated_at
`

type CreateStatsParams struct {
	PlayerID int64 `json:"playerId"`
	HalfID   int64 `json:"halfId"`
	Kills    int64 `json:"kills"`
	Deaths   int64 `json:"deaths"`
	Assists  int64 `json:"assists"`
	Score    int64 `json:"score"`
	Winner   bool  `json:"winner"`
}

func (q *Queries) CreateStats(ctx context.Context, arg CreateStatsParams) (Stat, error) {
	row := q.db.QueryRowContext(ctx, createStats,
		arg.PlayerID,
		arg.HalfID,
		arg.Kills,
		arg.Deaths,
		arg.Assists,
		arg.Score,
		arg.Winner,
	)
	var i Stat
	err := row.Scan(
		&i.ID,
		&i.PlayerID,
		&i.HalfID,
		&i.Kills,
		&i.Deaths,
		&i.Assists,
		&i.Score,
		&i.Winner,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
